syntax = "proto3";

package chatServer;

option go_package = "github.com/ELRAS1/chat-server/api/chatServer;chatServer";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Chat Server API";
    version: "1.0";
    description: "Chat Server service";
    contact: {
      name: "Elmir Rasulov";
      email: "elmir.rasulov.2002@mail.ru";
    };
  };

  host: "localhost:8082"
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service chatServer {
  // Создания чата
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/v1/create"
      body: "*"
    };
  }
  // Удаления чата
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get : "/v1/delete"
    };
  }
  // Отправка сообщения
  rpc SendMessage(SendMessageRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/send-messages"
      body: "*"
    };
  }
}
message CreateRequest {repeated string usernames = 1;}

message CreateResponse {int64 id = 1;}

message DeleteRequest {int64 id = 1;}

message SendMessageRequest {
  int64 chat_id = 1;
  string from = 2;
  string text = 3;
  google.protobuf.Timestamp timestamp = 4;
}
